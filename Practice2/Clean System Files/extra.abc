.comp 920 000111010010000
.start __extra_Start
.depend "_SystemEnumStrict" "20230921104623"
.depend "_SystemStrictLists" "20230921104625"
.depend "StdStrictLists" "20230921104624"
.depend "_SystemEnum" "20230921104625"
.depend "StdEnum" "20230921104626"
.depend "StdMisc" "20230921104624"
.depend "StdFunctions" "20230921104626"
.depend "StdCharList" "20230921104624"
.depend "StdTuple" "20230921104626"
.depend "StdOrdList" "20230921104625"
.depend "StdList" "20230921104624"
.depend "StdClass" "20230921104625"
.depend "StdFile" "20230921104624"
.depend "StdString" "20230921104624"
.depend "_SystemArray" "20230921104624"
.depend "StdArray" "20230921104625"
.depend "StdChar" "20230921104625"
.depend "StdReal" "20230921104625"
.depend "StdInt" "20230921104624"
.depend "StdOverloaded" "20230921104624"
.depend "StdBool" "20230921104625"
.depend "StdEnv" "20230921104625"
.module m_extra "extra" "20231005135425"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdMisc
.implab e_StdMisc_sabort
.impmod StdChar
.implab e_StdChar_s==;18
.export __extra_Start
.o 0 0
__extra_Start
	build _ 0 n2
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n2
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea2
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea2
.o 0 0
s2
	pushC 'D'
.d 0 1 c
	jmp s1
.o 0 1 c
s1
	pushC 'I'
	push_b 1
	eqC
	jmp_false else.1
	pop_b 1
	pushI 1
.d 0 1 i
	rtn
else.1
	pushC 'V'
	push_b 1
	eqC
	jmp_false else.2
	pop_b 1
	pushI 5
.d 0 1 i
	rtn
else.2
	pushC 'X'
	push_b 1
	eqC
	jmp_false else.3
	pop_b 1
	pushI 10
.d 0 1 i
	rtn
else.3
	pushC 'L'
	push_b 1
	eqC
	jmp_false else.4
	pop_b 1
	pushI 50
.d 0 1 i
	rtn
else.4
	pushC 'C'
	push_b 1
	eqC
	jmp_false else.5
	pop_b 1
	pushI 100
.d 0 1 i
	rtn
else.5
	pushC 'D'
	push_b 1
	eqC
	jmp_false else.6
	pop_b 1
	pushI 500
.d 0 1 i
	rtn
else.6
	pushC 'M'
	push_b 1
	eqC
	jmp_false else.7
	pop_b 1
	pushI 1000
.d 0 1 i
	rtn
else.7
	buildAC "Invalid input"
	pop_b 1
.d 1 0
	jsr print_string_
.o 0 0
	halt
	pushI_a 0
	pop_a 1
.d 0 1 i
	rtn
